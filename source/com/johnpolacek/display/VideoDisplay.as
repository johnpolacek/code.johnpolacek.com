package com.johnpolacek.display {		import flash.display.Sprite;	import flash.display.Loader;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.net.URLRequest;	import flash.net.navigateToURL;	import com.johnpolacek.media.VideoStreamPlayer;	/** * Loads and displays video via NetStream (flv and h264) * * @example  * <br /> * Basic usage: * <code>import com.johnpolacek.display.VideoDisplay; * var video:VideoDisplay = new VideoDisplay(); * video.loadVideo("example.flv"); * </code> * Example with styling:  * <code> * import com.johnpolacek.display.VideoDisplay; * var video:VideoDisplay = new VideoDisplay(); * video.autoPlay = false; * video.autoRewind = true; * video.buttonColor = 0xFFCC99; * video.backgroundColor = 0x333355; * video.loadVideo("example.flv"); * video.addPoster("poster.jpg"); * addChild(video); * </code> * * @see com.johnpolacek.media.VideoStreamPlayer; * @version  * <b>8 Mar 2010</b> * @author John Polacek, john@johnpolacek.com */			public class VideoDisplay extends ContentDisplay	{				/** The video player */		public var player:VideoStreamPlayer;		/** Boolean for video controls visibility. Default is true. */		public var showControls:Boolean = true;		/** Color of player buttons. Default is 0xFFFFFF */		public var buttonColor:uint = 0xFFFFFF;		/** Color of player background. Default is 0x000000 */		public var backgroundColor:uint = 0x000000;		/** Default is true. */		public var autoPlay:Boolean = true;		/** Default is false. */		public var autoRewind:Boolean = false;						/** @param videoURL url of the video. **/		public function VideoDisplay() 		{			player = new VideoStreamPlayer();			player.addEventListener(IOErrorEvent.IO_ERROR, onIOError);		}				/** @param videoURL url of the video. **/		public function loadVideo(videoURL:String) 		{			player.autoRewind = autoRewind;			player.buttonColor = buttonColor;			player.backgroundColor = backgroundColor;			player.loadVideo(videoURL, autoPlay);			if (showControls) 				player.addController();			player.addEventListener(Event.COMPLETE, onLoadComplete);			addChild(player);			if (showControls)  				player.addController();  // adds default controls to player			}				/** Dispatches Event.COMPLETE */		override public function onLoadComplete(event:Event):void		{			dispatchEvent(new Event(Event.COMPLETE));			player.removeEventListener(Event.COMPLETE, onLoadComplete);		}				/** @param posterURL url of the poster. **/		public function addPoster(posterURL:String):void		{			player.autoRewind = true;			player.autoPlay = false;			player.addPoster(posterURL);		}	}}