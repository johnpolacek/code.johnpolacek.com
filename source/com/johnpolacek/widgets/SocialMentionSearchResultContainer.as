package com.johnpolacek.widgets {	import flash.display.Sprite;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.geom.ColorTransform;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.net.URLRequestMethod;	import flash.system.Security;	import flash.text.StyleSheet;	import flash.text.TextFormat;	import com.johnpolacek.display.ImageDisplay;	import com.johnpolacek.shapes.Line;	import com.johnpolacek.text.HTMLTextBlock;		public class SocialMentionSearchResultContainer extends Sprite {		public var resultsStyleSheet:StyleSheet;		public var titles = [];		public var links = [];		public var descriptions = [];		public var pubDates = [];		public var proxyURL:String;		public var searchURL:String;		public var loader:URLLoader;		public var resultsLoaded:int = 0;		public var resultY:int = 0;		public var spacing:int = 10;		public var containerWidth:int = 550;			public function SocialMentionSearchResultContainer(proxy:String) 		{			proxyURL = proxy;		}				public function search(searchString:String):void 		{			trace("SocialMentionSearchResultContainer.getFeedFromProxy");			var spaces:RegExp = /\s/g;			searchString = searchString.replace(spaces, "+");			searchURL = proxyURL + "?search=" + searchString;			trace(searchURL);			var request:URLRequest = new URLRequest(searchURL);			request.method = URLRequestMethod.GET;			loader = new URLLoader();			loader.load(request);			loader.addEventListener(IOErrorEvent.IO_ERROR, onIOError);			loader.addEventListener(Event.COMPLETE, XMLLoadComplete);		}				public function XMLLoadComplete(event:Event):void 		{			trace("SocialMentionSearchResultContainer.XMLLoadComplete");			if (event.target.data!="") 				parseXML(XML(event.target.data));			else 				displayError('Oops! Looks like our search feed is down at the moment, please try again later.');		}				public function parseXML(xml:XML):void 		{			trace("SocialMentionSearchResultContainer.parseXML");			var feedXML:XMLList = xml.children()[0].children();			for (var i:int = 0; i < feedXML.length(); i++)			{				if(feedXML[i].name().localName == "item")				{					var itemXML:XML = feedXML[i];					titles.push(itemXML[0].title);					links.push(itemXML[0].link);					descriptions.push(itemXML[0].description);					pubDates.push(itemXML[0].pubDate);				}			}			build();		}				public function build():void 		{			trace("SocialMentionSearchResultContainer.build");			for (var i:int = 0; i < titles.length; i++) 			{				trace(titles[i]);				var line:Line = new Line(containerWidth, 1, 0x333333);				if (this.height > 0)					line.y = this.height + spacing;				addChild(line);				var dateText:String = "<body>"+pubDates[i]+"</body>";				var dateTextBlock:HTMLTextBlock = new HTMLTextBlock(dateText, containerWidth, resultsStyleSheet);				dateTextBlock.alpha = .5;				dateTextBlock.scaleX = dateTextBlock.scaleY = .75;				dateTextBlock.y = this.height + spacing;				addChild(dateTextBlock);				var linkText:String = "<a href='"+links[i]+"' target='_blank'>"+links[i]+"</a>";				var linkTextBlock:HTMLTextBlock = new HTMLTextBlock(linkText, containerWidth, resultsStyleSheet);				linkTextBlock.y = this.height + spacing;				addChild(linkTextBlock);				var titleText:String = "<body><b>"+titles[i]+"</b></body>";				var titleTextBlock:HTMLTextBlock = new HTMLTextBlock(titleText, containerWidth, resultsStyleSheet);				titleTextBlock.y = this.height + spacing;				addChild(titleTextBlock);				var bodyText:String = String(descriptions[i]).substr(1);				bodyText = "<body>"+bodyText+"</body>";				var bodyTextBlock:HTMLTextBlock = new HTMLTextBlock(bodyText, containerWidth, resultsStyleSheet);				bodyTextBlock.alpha = .75;				bodyTextBlock.y = this.height + spacing;				addChild(bodyTextBlock);			}			dispatchEvent(new Event(Event.COMPLETE));		}				public function onIOError(event:IOErrorEvent):void 		{			trace("SocialMentionSearchResultContainer.onIOError");			var errorText:String = 'Oops. It looks like our feed is down right now. Please try again later.';			displayError(errorText);			dispatchEvent(new Event(Event.COMPLETE));		}				public function displayError(errorText:String):void 		{			errorText = "<body>"+errorText+"</body>";			var errorHTMLTextBlock:HTMLTextBlock = new HTMLTextBlock(errorText, 500, resultsStyleSheet);			errorHTMLTextBlock.alpha = .75;			addChild(errorHTMLTextBlock);		}				public function clearResults():void 		{			while (this.numChildren > 0) 			{				removeChild(this.getChildAt(0));			}			titles = [];			links = [];			descriptions = [];			pubDates = [];		}	}}