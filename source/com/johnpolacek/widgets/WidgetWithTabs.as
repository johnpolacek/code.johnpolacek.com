package com.johnpolacek.widgets {	import flash.display.DisplayObject;	import flash.display.MovieClip;	import flash.display.SimpleButton;	import flash.events.MouseEvent;	import flash.events.Event;	import flash.geom.ColorTransform;	import flash.text.TextField;/** * A class for widgets with simple navigation: * * Requires a MovieClip on the stage with an instance name of nav, * which contains dynamic TextFields that function as buttons. * The text in each TextField should match a frame label -  * on mouse click, the playhead is sent to the frame label.</li> * * @version  * <b>19 Jun 2010</b>  <br>  * * @author John Polacek, john@johnpolacek.com */	 		public class WidgetWithTabs extends MovieClip 	{		/** A movie clip with TextFields in it. 		  * The text in each text field must match a frame label		  * When a TextField is clicked, the playhead moves to that frame label. **/		public var nav:MovieClip;		/** Container for dynamic content **/		public var container:MovieClip = new MovieClip;				private var selectTint:uint = 0xFF8220;		private var baseTint:uint = 0x666666;		private var highlightTint:uint = 0xFFFFFF;		private var colorTransform:ColorTransform;		private var selectButton:MovieClip;		private var navButtons = [];				public function WidgetWithTabs() 		{			var textFields = [];			var i:int;			for (i = 0; i < nav.numChildren; i++) 			{				var child:DisplayObject = nav.getChildAt(i);				if (child is TextField)					textFields.push(child);			}			for (i = 0; i < textFields.length; i++) 			{				var btn:MovieClip = new MovieClip();				btn.addChild(textFields[i]);				btn.buttonMode = true;				btn.useHandCursor = true;				btn.mouseChildren = false;				nav.addChild(btn);				navButtons.push(btn);			}			nav.addEventListener(MouseEvent.MOUSE_OVER,onOver);			nav.addEventListener(MouseEvent.MOUSE_OUT,onOut);			nav.addEventListener(MouseEvent.CLICK,onClick);		} 				private function onOver(event:MouseEvent):void 		{			if (event.target != selectButton) {				colorTransform = event.target.transform.colorTransform;				colorTransform.color = highlightTint;				event.target.transform.colorTransform = colorTransform;			}		}				private function onOut(event:MouseEvent):void 		{			if (event.target != selectButton) {				colorTransform = event.target.transform.colorTransform;				colorTransform.color = baseTint;				event.target.transform.colorTransform = colorTransform;			}		}				private function onClick(event:MouseEvent):void 		{			if (navButtons.indexOf(event.target) != -1)				select(MovieClip(event.target));		}				/** Selects one of the nav buttons **/		public function select(button:MovieClip) 		{			trace("select: "+TextField(button.getChildAt(0)).text);			if (selectButton) {				colorTransform.color = baseTint;				selectButton.transform.colorTransform = colorTransform;			}			selectButton = button;			colorTransform = selectButton.transform.colorTransform;			colorTransform.color = selectTint;			selectButton.transform.colorTransform = colorTransform;			gotoAndStop(TextField(button.getChildAt(0)).text); //Type in nav dynamic boxes should match frame labels in page		}	}}