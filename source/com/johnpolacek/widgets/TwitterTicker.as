// IMPORTANT: REQUIRES crossdomain.xml ON TOP LEVEL OF DOMAIN// If security error is still thrown, check for new policy file on twimg.com subdomainpackage com.johnpolacek.widgets {	import flash.display.Sprite;	import flash.events.Event;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import com.johnpolacek.display.ImageDisplay;	import com.greensock.TweenLite;	import flash.geom.ColorTransform;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.net.URLRequestMethod;	public class TwitterTicker extends TwitterSearchResultContainer {		public function TwitterTicker(proxy:String) 		{			super(proxy);			this.visible = false;		}				override public function addTweet():void 		{			var tweet:Sprite = new Sprite();			tweet.x = this.width + (this.numChildren * 10);			addChild(tweet);						// add tweet text			var tweetText:String = "<body>"+tweets[tweetsLoaded]+"</body>";			var newLine:RegExp = /\n/g;			tweetText = tweetText.replace(newLine, "");			var tweetTextField:TextField = new TextField();			tweetTextField.styleSheet = tweetStyleSheet;			tweetTextField.embedFonts = true;			tweetTextField.wordWrap = false;			tweetTextField.autoSize = TextFieldAutoSize.LEFT;			tweetTextField.htmlText = tweetText;			tweetTextField.x = 56;			tweet.addChild(tweetTextField);						// add tweet time stamp			var timeText:String;			if (times[tweetsLoaded] > 1) 				timeText = times[tweetsLoaded]+" minutes ago by "+authors[tweetsLoaded];			else				timeText = "Less than a minute ago by "+authors[tweetsLoaded];			timeText = "<date>"+timeText+"</date>";			var tweetTimestamp:TextField = new TextField();			tweetTimestamp.styleSheet = tweetStyleSheet;			tweetTimestamp.embedFonts = true;			tweetTimestamp.wordWrap = false;			tweetTimestamp.autoSize = TextFieldAutoSize.LEFT;			tweetTimestamp.htmlText = timeText;			tweetTimestamp.x = 56;			tweetTimestamp.y = 32;			tweetTimestamp.alpha = .5;			tweet.addChild(tweetTimestamp);								// add profile pic			var picURL:String;			if (String(pics[tweetsLoaded]) == "undefined" || String(pics[tweetsLoaded]).indexOf(".bmp") != -1) 				picURL = TWITTER_BADGE_URL;			else				picURL = pics[tweetsLoaded];						var image:ImageDisplay = new ImageDisplay(picURL);			image.addEventListener(Event.COMPLETE, onTweetImageLoaded);			tweet.addChild(image);		}				override public function onTweetImageLoaded(event:Event):void 		{			var image:ImageDisplay = ImageDisplay(event.target);			image.width = image.height = 48;						tweetsLoaded++;						if (tweetsLoaded < tweets.length)			{				addTweet();			}			else			{				dispatchEvent(new Event(Event.COMPLETE));				animateTicker();			}		}				private function animateTicker():void		{			this.x = stage.stageWidth;			this.visible = true;			TweenLite.to(this, (this.width/stage.stageWidth) * 20, {x:-this.width});		}	}}