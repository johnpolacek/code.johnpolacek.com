package com.johnpolacek.components {		import flash.display.Sprite;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.events.MouseEvent;	import flash.events.TextEvent;	import flash.text.StyleSheet;	import com.johnpolacek.components.ContentContainer;	import com.johnpolacek.shapes.RectangleShape;	import com.johnpolacek.shapes.BitmapNoiseRectangle;	/** * The ContentPanel class displays content in a panel * that can be formatted with a background and margins. * * It is designed to work with the ContentContainer class  * to provide an efficient method of loading and displaying * html-formatted content from * an xml file. *  * @see com.johnpolacek.media.ContentContainer * @version  * 27 Apr 2010 * @author John Polacek, john@johnpolacek.com */	 	public class ContentPanel extends Sprite {				/** Contains all panel elements except the background. **/		public var container:Sprite = new Sprite();		/** Background sprite **/		public var background:Sprite = new Sprite();		/** 		* Object contains all formatting for the ControlPanel.		* If no formatting assigned, defaults are used.	**/		public var format:ContentPanelFormat = new ContentPanelFormat();		/** 		* StyleSheet that is applied to all html-formatted text		* Default: Empty StyleSheet (No styling) **/		public var styleSheet:StyleSheet = new StyleSheet();		/** 		* Path to all the content files (jpg, flv, etc.) 		* Default: ""	**/		public var contentPath:String = "";						/**  		* @param w Sets the width of the panel background. Default is 0 (width is autosized)		* @param h Sets the minimum height for the panel. Default is 0 (no min height)		* @param m Sets all panel margins to the same value. Default is 0 pixels		**/		public function ContentPanel() 		{			addChild(background);			addChild(container);		}				/** Set formatting **/		public function setFormat(f:ContentPanelFormat) 		{			format = f;			setBackground();			container.x = format.marginLeft;			container.y = format.marginTop;		}					public function setBackground():void		{						while (background.numChildren > 0)			{				background.removeChildAt(0);			}			var backgroundHeight:int = container.height + format.marginTop + format.marginBottom + (format.spacing * container.numChildren);			if (backgroundHeight < format.height) 				backgroundHeight = format.height;			var backgroundShape:Sprite = new RectangleShape(format.width, 															backgroundHeight, 															format.color, 															format.alpha);			if (format.noise > 0)			{				var noiseRect:BitmapNoiseRectangle = new BitmapNoiseRectangle(backgroundShape.width, backgroundShape.height, format.noise);				backgroundShape.addChild(noiseRect);			}			background.addChild(backgroundShape);		}			//----------------------------------  	//  ELEMENTS   	//----------------------------------				/**  		* Adds a sprite to the bottom of the panel.		* @param element Sprite to be added to the panel.		**/		public function addElement(element:Sprite):void		{		element.y = container.height + format.spacing;			if (container.numChildren > 0)				element.y += format.spacing;			container.addChild(element);			if (background.numChildren > 0)				setBackground();		}				/**  		* Creates a new ContentContainer and loads content into it from xml.		* @param url URL of XML file with CDATA containing the html for the content.		**/		public function loadElementFromXML(url:String):void		{			trace("ContentPanel.loadElementFromXML "+url);			var elementContainer:ContentContainer = new ContentContainer(format.width - format.marginLeft - format.marginRight);			elementContainer.contentPath = contentPath;			elementContainer.textStyleSheet = styleSheet;			elementContainer.spacing = format.spacing;			elementContainer.lineColor = format.lineColor;			elementContainer.loadXML(url);			elementContainer.addEventListener(IOErrorEvent.IO_ERROR, onXMLLoadError, false, 0, true);			elementContainer.addEventListener(Event.COMPLETE, onContainerLoadComplete, false, 0, true);		}				/**  		* Creates a new ContentContainer and loads content into it from xml.		* @param url URL of XML file with CDATA containing the html for the content.		**/		public function addElementFromXML(xml:XML):void		{			var elementContainer:ContentContainer = new ContentContainer(format.width - format.marginLeft - format.marginRight);			elementContainer.contentPath = contentPath;			elementContainer.textStyleSheet = styleSheet;			elementContainer.spacing = format.spacing;			elementContainer.lineColor = format.lineColor;			elementContainer.loadContentFromXML(xml);			elementContainer.addEventListener(IOErrorEvent.IO_ERROR, onXMLLoadError, false, 0, true);			elementContainer.addEventListener(Event.COMPLETE, onContainerLoadComplete, false, 0, true);		}			//----------------------------------  	//  EVENT HANDLING   	//----------------------------------				/** XML loader io error handler. **/		public function onXMLLoadError(event:IOErrorEvent):void		{			dispatchEvent(event);			event.target.removeEventListener(IOErrorEvent.IO_ERROR, onXMLLoadError);			event.target.removeEventListener(Event.COMPLETE, onContainerLoadComplete);		}				/** Container load complete handler **/		public function onContainerLoadComplete(event:Event):void		{			event.target.removeEventListener(IOErrorEvent.IO_ERROR, onXMLLoadError);			event.target.removeEventListener(Event.COMPLETE, onContainerLoadComplete);			addElement(Sprite(event.target));			if (background.numChildren > 0)				background.height = background.getChildAt(0).height;  // fix bug where flash not reading background height properly			dispatchEvent(new Event(Event.COMPLETE));		}	}}