package com.johnpolacek.media {		import flash.media.Sound;	import flash.media.SoundChannel;	import flash.media.SoundTransform;	import flash.net.URLRequest;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.events.TimerEvent;	import flash.utils.Timer;	/** * Loads audio files and plays them in a loop.  * Sound playback begins automatically. * * @example  * <code>import com.johnpolacek.sound.SoundLoop; * var soundLoop:SoundLoop = new SoundLoop("sample1.mp3", "sample2.mp3", "sample3.mp3"); * </code> * * @version 7 Mar 2010 * @author John Polacek, john@johnpolacek.com */	 	public class SoundLoop {				/** Index of the current sound playing in the loop */		public var currentSound:int = 0;		/** Number of sounds in the loop */		public var numSounds:int;				private var soundsArray:Array = [];		private var soundChannel:SoundChannel = new SoundChannel();		private var soundsLoaded:int = 0;				/** @param urls Audio file urls */			public function SoundLoop(...urls)		{			numSounds = urls.length;			for (var i:int = 0; i < numSounds; i++)			{				var	sound:Sound = new Sound();				sound.load(new URLRequest(urls[i]));				sound.addEventListener(IOErrorEvent.IO_ERROR, onIOError);				sound.addEventListener(Event.COMPLETE, onSoundLoadComplete);			}		}							//--------------------------------------------------------------------------    //    //  EVENTS HANDLERS    //    //--------------------------------------------------------------------------								private function onIOError(event:IOErrorEvent):void		{			trace(event.text);			numSounds--;		}				private function onSoundLoadComplete(event:Event):void		{			soundsArray.push(event.target);			soundsLoaded++;			if (soundsLoaded == numSounds)			{				currentSound = 0;								play();			}		}		private function onSoundFinish(event:Event):void		{			soundChannel.removeEventListener(Event.SOUND_COMPLETE, onSoundFinish);			currentSound++;			if (currentSound == soundsArray.length)				currentSound = 0;							play();		}									//--------------------------------------------------------------------------    //    //  PUBLIC METHODS    //    //--------------------------------------------------------------------------						/** Begins playback */			public function play():void		{			soundChannel.soundTransform.volume = 1;			soundChannel = soundsArray[currentSound].play();			soundChannel.addEventListener(Event.SOUND_COMPLETE, onSoundFinish);		}				/** Stops playback */			public function stop():void		{			soundChannel.stop();		}				/** Fades out audio		* @param seconds Length of the audio fade out (in seconds)		*/			public function fade(seconds:Number = 5):void		{			var transform:SoundTransform = soundChannel.soundTransform;			var timerDelay:Number = 1000/50;           	var fadeTimer:Timer = new Timer(timerDelay);			var adjustAmount:Number = 1 / (seconds * timerDelay);			fadeTimer.addEventListener(TimerEvent.TIMER, fadeTimerHandler);			fadeTimer.start();			function fadeTimerHandler(te:TimerEvent):void 			{				transform.volume -= adjustAmount;				soundChannel.soundTransform = transform;				if (soundChannel.soundTransform.volume == 0)				{					fadeTimer.stop();					fadeTimer.removeEventListener(TimerEvent.TIMER, fadeTimerHandler);					fadeTimer = null					stop();				}			}		}	}}