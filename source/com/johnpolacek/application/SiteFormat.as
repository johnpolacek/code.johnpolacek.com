package com.johnpolacek.application {			 /** * The SiteFormat class represents formatting information for the FullScreenSite application class.  *  *  * Properties are set by xml data that is passed to the SiteFormat constructor. * Properties not defined in the xml file will retain their default values. *  * @version  * <b>08 May 2010</b> Added nav button alpha property <br /> * <b>20 Apr 2010</b> * @author John Polacek, john@johnpolacek.com */	 		import com.johnpolacek.components.LightboxFormat;	import com.johnpolacek.components.ContentPanelFormat;	import flash.text.Font;	import flash.text.StyleSheet;	import flash.text.TextFormat;		public class SiteFormat {				/** 		* The url of the image or hexadecimal value of the color of the background		* Default: "0xFFFFFF"	**/		public var background:String = "0x000000";		/** 		* Path to all the content files (jpg, flv, etc.) 		* Default: "content/"	**/		public var contentPath:String = "content/";		/** 		* The lightboxFormat property is a lightboxFormat object that is applied to the lightbox.		* Default:	Default LightboxFormat object **/		public var lightboxFormat:LightboxFormat;		/** 		* Sets the color of any divider lines.		* Default:	0x000000 **/		public var lineColor:uint = 0x000000;		/** 		* Array containing filepaths to all runtime fonts (e.g. "fonts/ArialBlack.swf") 		* Default: [] (No runtime fonts, all text rendered as Times New Roman) **/		public var fonts:Array = [];		/** 		* StyleSheet that is applied to all html-formatted text		* Default: Empty StyleSheet (No styling) **/		public var textStyleSheet:StyleSheet = new StyleSheet();		/** 		* Object that contains formatting for content sections		* Default: Default format **/		public var sectionFormat:ContentPanelFormat = new ContentPanelFormat();		/** 		* Object that contains formatting for the header		* Default: Default format **/		public var headerFormat:ContentPanelFormat = new ContentPanelFormat();		/** 		* Object that contains formatting for the footer		* Default: null (No footer)**/		public var footerFormat:ContentPanelFormat = null;		/** 		* Object that contains formatting for the sidebar		* Default: null (No sidebar)**/		public var sidebarFormat:ContentPanelFormat = null;		/** 		* Object that contains formatting for the nav		* Default: {} (Default format) **/		public var nav = {};		/** 		* Object that contains formatting for the header masthead		* Default: {} (No masthead) **/		public var masthead = {};		/** 		* The margin property determines the margin around the content container.		* Default:	20 **/		public var margin:int = 20;		/** 		* Object that contains formatting for the scrollbar		* Default: {} (Default format) **/		public var scrollbar = {};						public function SiteFormat(xml:XML = null) 		{			if (xml==null)				xml = new XML();						if (String(xml.margin)!="") 				margin = int(xml.margin);						//----------------------------------  		//  fonts    	//----------------------------------			var fontsPath:String = (xml.fonts.@path);			for each (var fontURL:String in xml.fonts..font) 			{				fonts.push(fontsPath+fontURL+".swf");			}				//----------------------------------  		//  scrollbar    	//----------------------------------					// set default values			scrollbar = { scrubColor:0x666666,scrubAlpha:1,trackColor:0x000000,trackAlpha:.5 };						// override defaults with settings from xml			if (String(xml.scrollbar.scrub.color)!="") 				scrollbar.scrubColor = uint(xml.scrollbar.scrub.color);							if (String(xml.scrollbar.scrub.alpha)!="") 				scrollbar.scrubAlpha = Number(xml.scrollbar.scrub.alpha);							if (String(xml.scrollbar.track.color)!="") 				scrollbar.trackColor = uint(xml.scrollbar.track.color);							if (String(xml.scrollbar.track.alpha)!="") 				scrollbar.trackAlpha = Number(xml.scrollbar.track.alpha);						//----------------------------------  		//  background    	//----------------------------------						if (String(xml.background)!="") 				background = xml.background;						//----------------------------------  		//  content    	//----------------------------------							sectionFormat.setFormatFromXML(XML(xml.content));				//----------------------------------  		//  header    	//----------------------------------							headerFormat.setFormatFromXML(XML(xml.header));					//----------------------------------  		//  sidebar    	//----------------------------------					if (xml.sidebar.length() != 0)			{				sidebarFormat = new ContentPanelFormat();				sidebarFormat.setFormatFromXML(XML(xml.sidebar));			}				//----------------------------------  		//  footer    	//----------------------------------					if (xml.footer.length() != 0)			{				footerFormat = new ContentPanelFormat();				footerFormat.setFormatFromXML(XML(xml.footer));			}					//----------------------------------  		//  lightbox    	//----------------------------------							lightboxFormat = new LightboxFormat();			lightboxFormat.setFormatFromXML(XML(xml.lightbox));						//----------------------------------  		//  nav    	//----------------------------------					nav.textFormat = new TextFormat();			nav.spacing = int(xml.nav.spacing);			nav.buttonWidth = int(xml.nav.buttons.width);			nav.x = int(xml.nav.@x);			nav.y = int(xml.nav.@y);			nav.alpha = Number(xml.nav.buttons.alpha);			if (nav.alpha == 0) 				nav.alpha = .9;						if (String(xml.nav.align)=="right" || String(xml.nav.align)=="left" || String(xml.nav.align)=="center") 				nav.textFormat.align = xml.nav.align;						if (String(xml.nav.buttons.size)!="") 				nav.textFormat.size = int(xml.nav.buttons.size);							if (String(xml.nav.buttons.font)!="") 				nav.textFormat.font = xml.nav.buttons.font;						nav.textFormat.leading = int(xml.nav.buttons.linespacing);			nav.textFormat.color = uint(xml.nav.buttons.color);						if (String(xml.nav.buttons.lines)!="") 				nav.lines = { color:uint(xml.nav.buttons.lines.color), 							  alpha:Number(xml.nav.buttons.lines.alpha),							  spacing:int(xml.nav.buttons.lines.spacing), 							  adjustY:int(xml.nav.buttons.lines.adjusty) }								 		}	}}